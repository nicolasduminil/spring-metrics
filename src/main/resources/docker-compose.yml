version: "3.7"
volumes:
  prometheus_data: {}
  grafana_data: {}
networks:
  front-tier:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 192.168.80.0/20
  back-tier:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 192.168.96.0/20
services:
  node_exporter:
    image: basi/node-exporter:v0.1.1
    container_name: node_exporter
    networks:
      back-tier:
        ipv4_address: 192.168.96.2
    hostname: node_exporter
    ports:
      - 9100:9100
    volumes:
      - /proc:/host/proc
      - /sys:/host/sys
      - /:/rootfs
      - /etc/hostname:/etc/hostname
    environment:
      - HOSTNAME=/etc/hostname
    command: '-collector.procfs /host/proc -collector.sysfs /host/sys -collector.filesystem.ignored-mount-points "^/(sys|proc|dev|host|etc)($$|/)" -collector.textfile.directory /etc/node-exporter/ -collectors.enabled="conntrack,diskstats,entropy,filefd,filesystem,loadavg,mdadm,meminfo,netdev,netstat,stat,textfile,time,vmstat,ipvs"'
  advisor:
    image: google/cadvisor:v0.24.1
    container_name: advisor
    depends_on:
      - node_exporter
    networks:
      back-tier:
        ipv4_address: 192.168.96.3
    hostname: advisor
    ports:
      - 8080:8080
    volumes:
      - /:/rootfs
      - /var/run:/var/run
      - /sys:/sys
      - /var/lib/docker:/var/lib/docker
  prometheus:
    image: prom/prometheus:v2.1.0
    container_name: prometheus
    depends_on:
      - node_exporter
      - advisor
    networks:
      back-tier:
        ipv4_address: 192.168.96.4
    hostname: prometheus
    ports:
      - 9090:9090
    links:
      - advisor:advisor
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
  grafana:
    image: grafana/grafana
    container_name: grafana
    depends_on:
      - node_exporter
      - advisor
      - prometheus
    networks:
      back-tier:
        ipv4_address: 192.168.96.5
      front-tier:
        ipv4_address: 192.168.80.2
    hostname: grafana
    ports:
      - 3000:3000
    user: "104"
    volumes:
      - grafana_data:/var/lib/grafana
  instana:
    image: instana/agent
    container_name: instana
    privileged: true
    pid: host
    depends_on:
      - node_exporter
      - advisor
      - prometheus
      - grafana
    network_mode: host
    hostname: instana
    volumes:
      - /var/run:/var/run
      - /run:/run
      - /dev:/dev
      - /sys:/sys
      - /var/log:/var/log
    environment:
      - INSTANA_AGENT_ENDPOINT=ingress-blue-saas.instana.io
      - INSTANA_AGENT_ENDPOINT_PORT=443
      - INSTANA_AGENT_KEY=_qHudaLIRKWsG6lTDJdrcA
      - INSTANA_AGENT_ZONE=''
  press_release:
    image: openjdk:13-alpine
    depends_on:
      - node_exporter
      - advisor
      - prometheus
      - grafana
      - instana
    container_name: press_release
    networks:
      back-tier:
        ipv4_address: 192.168.96.6
    hostname: press_release
    volumes:
      - ../docker:/usr/local/share/hml
    ports:
      - "8081:8081"
    entrypoint: /usr/local/share/hml/run.sh
    environment:
      - NODE_EXPORTER_PORT=9100
      - CADVISOR_PORT=8080
      - PROMETHEUS_PORT=9090
      - GRAFANA_PORT=3000
      - INSTANA_PORT=443
      - SERVER_PORT=8081
    links:
      - node_exporter:node_exporter
      - advisor:advisor
      - prometheus:prometheus
      - grafana:grafana
      - instana:instana

